{
    "swagger": "2.0",
    "info": {
        "description": "This is documentation page for the Burger API",
        "version": "1.0.0",
        "title": "Burger Store",
        "contact": {
            "email": "dastanbeksamatov@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "host": "localhost:3005",
    "basePath": "",
    "tags": [
        {
            "name": "burger",
            "description": "Everything about Burgers"
        }
    ],
    "schemes": [
        "https",
        "http"
    ],
    "paths": {
        "/burgers/": {
            "get": {
                "tags": [
                    "burger"
                ],
                "summary": "gets list of burgers",
                "description": "",
                "operationId": "uploadFile",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                          "application/json": {
                            "schema": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                    }
                }
            }
        },
        "/burgers/add": {
            "post": {
                "tags": [
                    "burger"
                ],
                "summary": "Add a new burger to the db",
                "description": "",
                "operationId": "addBurger",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Burger that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/burger"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                }
              }
        },
        "/burgers/{burgerId}": {
            "get": {
                "tags": [
                    "burger"
                ],
                "summary": "Find burger by ID",
                "description": "Returns a single burger",
                "operationId": "getburgerById",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Burger"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "burger not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "burger"
                ],
                "summary": "Updates a burger in the store with form data",
                "description": "",
                "operationId": "updateburgerWithForm",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "burgerstore_auth": [
                            "write:burgers",
                            "read:burgers"
                        ]
                    }
                ]
            }
        }
    },
    "definitions": {
        "ApiResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "Burger": {
            "type": "object",
            "required": [
                "name",
                "img"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string",
                    "example": "doggie"
                },
                "photoUrls": {
                    "type": "array",
                    "xml": {
                        "wrapped": true
                    },
                    "items": {
                        "type": "string",
                        "xml": {
                            "name": "photoUrl"
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "xml": {
                        "wrapped": true
                    },
                    "items": {
                        "xml": {
                            "name": "tag"
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "description": "burger status in the store",
                    "enum": [
                        "available",
                        "pending",
                        "sold"
                    ]
                }
            },
            "xml": {
                "name": "burger"
            }
        }
    }
}